variables:
  SSH_DEV: "ssh $SSH_CT_DEV_02"

  CONTAINER_REGISTRY: wad-team/ais-admin-theme
  CONTAINER_NAME: admin-theme
  HOST_PORT: 8021
  CONTAINER_PORT: 80
  PM2_FILE: "pm2-production.json"
  
cache:
  untracked: true
  key: "cache-ais-admin-theme"
  paths:
    - node_modules/

stages:
  - Build and Push
  - Deploy

build_dev:
  stage: Build and Push
  image: docker:stable
  services:
    - docker:18.09-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - echo "===== BEGIN BUILD ====="
    - docker build -t $CI_REGISTRY/$CONTAINER_REGISTRY:dev --build-arg CONTAINER_PORT=$CONTAINER_PORT --build-arg PM2_FILE=$PM2_FILE .
    - docker rmi -f $(docker images -f "dangling=true" -q) || echo "ignore"
    - docker images
    - echo "===== END BUILD ====="
    - echo "===== BEGIN PUSH ====="
    - docker push $CI_REGISTRY/$CONTAINER_REGISTRY:dev
    - docker rmi -f $CI_REGISTRY/$CONTAINER_REGISTRY:dev
    - echo "===== END PUSH ====="
  after_script:
    - docker logout $CI_REGISTRY
  only:
    - master
  tags:
    - docker-runner-03

deploy_dev:
  stage: Deploy
  image: twinsynergy/deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$DEV_PRIVATE_KEY_02" > ./key.file
    - chmod 400 ./key.file
    - ssh-add ./key.file
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "===== BEGIN DEPLOYMENT ====="
    - $SSH_DEV "echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin"
    - $SSH_DEV "docker rmi -f $CI_REGISTRY/$CONTAINER_REGISTRY:dev || echo 'ignore'"
    - $SSH_DEV "docker rmi -f $(docker images -f 'dangling=true' -q) || echo 'ignore'"
    - $SSH_DEV "docker pull $CI_REGISTRY/$CONTAINER_REGISTRY:dev"
    - $SSH_DEV "docker rm -f $CONTAINER_NAME || echo 'ignore'"
    - $SSH_DEV "docker run -d --restart always --name $CONTAINER_NAME -p $HOST_PORT:$CONTAINER_PORT $CI_REGISTRY/$CONTAINER_REGISTRY:dev"
    - $SSH_DEV "docker ps"
    - $SSH_DEV "docker logout $CI_REGISTRY"
    - echo "===== END DEPLOYMENT ====="
  after_script:
    - $SSH_DEV "exit"
  only:
    - master
  tags:
    - docker-runner-03